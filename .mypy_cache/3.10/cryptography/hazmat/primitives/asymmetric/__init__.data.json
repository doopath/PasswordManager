{".class": "MypyFile", "_fullname": "cryptography.hazmat.primitives.asymmetric", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AsymmetricSignatureContext": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["finalize", "update"], "bases": ["builtins.object"], "declared_metaclass": "abc.ABCMeta", "defn": {".class": "ClassDef", "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext", "name": "AsymmetricSignatureContext", "type_vars": []}, "flags": ["is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "cryptography.hazmat.primitives.asymmetric", "mro": ["cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext", "builtins.object"], "names": {".class": "SymbolTable", "finalize": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated", "is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext.finalize", "name": "finalize", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "finalize of AsymmetricSignatureContext", "ret_type": "builtins.bytes", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "finalize", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "finalize of AsymmetricSignatureContext", "ret_type": "builtins.bytes", "type_guard": null, "variables": []}}}}, "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "flags": ["is_decorated", "is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext", "builtins.bytes"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of AsymmetricSignatureContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricSignatureContext", "builtins.bytes"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of AsymmetricSignatureContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AsymmetricVerificationContext": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["update", "verify"], "bases": ["builtins.object"], "declared_metaclass": "abc.ABCMeta", "defn": {".class": "ClassDef", "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext", "name": "AsymmetricVerificationContext", "type_vars": []}, "flags": ["is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "cryptography.hazmat.primitives.asymmetric", "mro": ["cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext", "builtins.object"], "names": {".class": "SymbolTable", "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "flags": ["is_decorated", "is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext", "builtins.bytes"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of AsymmetricVerificationContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "data"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext", "builtins.bytes"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of AsymmetricVerificationContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}, "verify": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated", "is_abstract"], "fullname": "cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext.verify", "name": "verify", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "verify of AsymmetricVerificationContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "verify", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["cryptography.hazmat.primitives.asymmetric.AsymmetricVerificationContext"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "verify of AsymmetricVerificationContext", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cryptography.hazmat.primitives.asymmetric.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cryptography.hazmat.primitives.asymmetric.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cryptography.hazmat.primitives.asymmetric.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "cryptography.hazmat.primitives.asymmetric.__package__", "name": "__package__", "type": "builtins.str"}}, "abc": {".class": "SymbolTableNode", "cross_ref": "abc", "kind": "Gdef"}}, "path": "/home/doopath/.local/lib/python3.10/site-packages/cryptography/hazmat/primitives/asymmetric/__init__.py"}