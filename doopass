#! /usr/bin/env python3
""" A python module that helps you to manage your secret data. """

import sys
from textual.app import App, ComposeResult
from textual.widgets import Header
from src.core import store
from src.core.components.login_page import LoginPage
from src.core.screens.incorrect_password_screen import IncorrectPasswordScreen


class Doopass(App):
    CSS_PATH = "assets/styles.css"

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.store = None

    def on_mount(self) -> None:
        self.screen.styles.background = "black"

    def compose(self) -> ComposeResult:
        yield Header(show_clock=True, id="header")
        yield LoginPage(self.set_store).create()

    def show_incorrect_password_message(self) -> None:
        error_screen = IncorrectPasswordScreen()
        self.install_screen(error_screen)
        self.push_screen(error_screen)

    def set_store(self, password: str) -> None:
        self.store = store.try_initialize_store(password)

        if self.store:
            # TODO: Create a store-handle page that will allow the user to manage the store.
            # It will be shown if the store is initialized successfully. After that the user is logged in
            # and the store object is loaded into the app.
            # Notice that if the store is not initialized yet (before the user tried to log in) the store will
            # be created and loaded (but it's empty).
            ...
        else:
            self.show_incorrect_password_message()


def main() -> int:
    app = Doopass()
    app.run()

    return 0


if __name__ == "__main__":
    sys.exit(main())
