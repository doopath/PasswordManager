#! /usr/bin/env python3
""" A python module that helps you to manage your secret data. """

import sys
from textual.app import App, ComposeResult
from textual.widgets import Header
from src.core import store
from src.core.components.login_page import LoginPage
from src.core.exceptions import StoreIsNotInitializedError
from src.core.screens.message_screen import MessageScreen


class Doopass(App):
    CSS_PATH = "assets/styles.css"

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.store = None

    def on_mount(self) -> None:
        self.screen.styles.background = "black"

    def compose(self) -> ComposeResult:
        yield Header(show_clock=True, id="header")
        yield LoginPage(self.set_store).create()

    def show_incorrect_password_message(self) -> None:
        callback = lambda: self.pop_screen()
        message_screen = MessageScreen(callback, "Incorrect password")
        self.install_screen(message_screen)
        self.push_screen(message_screen)

    def show_sign_up_screen(self) -> None:
        self.pop_screen()
        # TODO: Create a sign up screen and show it. The sign up screen will
        # validate a password, call self.set_store and pop screen.

        # signupscreen = SignUpScreen()
        # self.install_screen(signupscreen)
        # self.push_screen(signupscreen)

    def show_store_is_not_initialized_message(self) -> None:
        message_screen = MessageScreen(
            self.show_sign_up_screen, "Store is not initialized. Please sign up."
        )
        self.install_screen(message_screen)
        self.push_screen(message_screen)

    def set_store(self, password: str) -> None:
        try:
            self.store = store.try_initialize_existing_store(password)
        except StoreIsNotInitializedError:
            self.show_store_is_not_initialized_message()
            return

        if self.store:
            # TODO: Create a store-handle page that will allow the user to manage the store.
            # It will be shown if the store is initialized successfully. After that the user is logged in
            # and the store object is loaded into the app.
            # Notice that if the store is not initialized yet (before the user tried to log in) the store will
            # be created and loaded (but it's empty).
            # It's necessary to create a sign up screen that's shown if the store is not initialized yet.
            ...
        else:
            self.show_incorrect_password_message()


def main() -> int:
    app = Doopass()
    app.run()

    return 0


if __name__ == "__main__":
    sys.exit(main())
